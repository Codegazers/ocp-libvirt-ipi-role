---

    - name: Configure Iptables
      become: true
      tags: install
      ignore_errors: yes
      shell: |
        IFACE=$(nmcli con show | grep "{{ kvm_interface }}" | awk '{print $5}')
        # Publishing
        if [ {{ compute.0.replicas }} -ne 0 ]
        then
          API_VIP={{ ocp_api_vip }}
          APPS_VIP={{ ocp_apps_vip }}
        else
          API_VIP={{ ocp_api_vip }}
          APPS_VIP={{ ocp_api_vip }}
        fi
        if [ {{ lb }} == "true" ]
        then
          API_VIP={{ ocp_cluster_net_gw }}
          APPS_VIP={{ ocp_cluster_net_gw }}
        fi
        iptables -I FORWARD 1 -i any -o any -j ACCEPT
        iptables -I PREROUTING 1 -t nat -i $IFACE -p tcp --dport 6443 -j DNAT --to $API_VIP:6443
        iptables -I FORWARD 1 -p tcp -d $API_VIP --dport 6443 -j ACCEPT
        iptables -I PREROUTING 1 -t nat -i $IFACE -p tcp --dport 443 -j DNAT --to $APPS_VIP:443
        iptables -I FORWARD 1 -p tcp -d $APPS_VIP --dport 443 -j ACCEPT
        iptables -I PREROUTING 1  -t nat -i $IFACE -p tcp --dport 80 -j DNAT --to $APPS_VIP:80
        iptables -I FORWARD 1 -p tcp -d $APPS_VIP --dport 80 -j ACCEPT
        iptables -I INPUT 1 -p tcp  --dport 6443 -j ACCEPT
        iptables -I INPUT 1 -p tcp  --dport 443 -j ACCEPT
        iptables -I INPUT 1 -p tcp  --dport 80 -j ACCEPT
        iptables-save > /etc/iptables.conf
      when: kvm_firewall == "iptables"


    - name: Configure Firewalld
      become: true
      ignore_errors: yes
      shell: |
        sudo firewall-cmd --zone=public --add-service=http --permanent
        sudo firewall-cmd --zone=public --add-service=https --permanent
        sudo firewall-cmd --zone=public --add-service=ocpapi --permanent
        sudo firewall-cmd --reload
      when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "8") or
            (ansible_distribution == "RedHat" and ansible_distribution_major_version == "8")
